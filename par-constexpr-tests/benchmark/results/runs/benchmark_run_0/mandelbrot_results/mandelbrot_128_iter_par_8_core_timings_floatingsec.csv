1.15045,4.77067,10.8182,18.8121,PLEASE submit a bug report to https://bugs.llvm.org/ and include the crash backtrace, preprocessed source, and associated run script.#1 0x00007ff40fb4de84 llvm::sys::RunSignalHandlers() (/home/gozillon/Documents/Clang-LLVM/build-with-asserts_dump/lib/libLLVMSupport.so.12git+0x21de84)#3 0x00007ff40f56c210 (/lib/x86_64-linux-gnu/libc.so.6+0x46210)#5 0x00007ff40e3b7e4e clang::ASTContext::getASTRecordLayout(clang::RecordDecl const*) const (/home/gozillon/Documents/Clang-LLVM/build-with-asserts_dump/lib/libclangAST.so.12git+0x74be4e)#7 0x00007ff40e23fb76 (anonymous namespace)::LValueExprEvaluator::VisitVarDecl(clang::Expr const*, clang::VarDecl const*) (/home/gozillon/Documents/Clang-LLVM/build-with-asserts_dump/lib/libclangAST.so.12git+0x5d3b76)#9 0x00007ff40e2269eb EvaluateLValue(clang::Expr const*, (anonymous namespace)::LValue&, (anonymous namespace)::EvalInfo&, bool) (/home/gozillon/Documents/Clang-LLVM/build-with-asserts_dump/lib/libclangAST.so.12git+0x5ba9eb)#11 0x00007ff40e275fed (anonymous namespace)::ExprEvaluatorBase<(anonymous namespace)::LValueExprEvaluator>::VisitCallExpr(clang::CallExpr const*) (/home/gozillon/Documents/Clang-LLVM/build-with-asserts_dump/lib/libclangAST.so.12git+0x609fed)#13 0x00007ff40e2269eb EvaluateLValue(clang::Expr const*, (anonymous namespace)::LValue&, (anonymous namespace)::EvalInfo&, bool) (/home/gozillon/Documents/Clang-LLVM/build-with-asserts_dump/lib/libclangAST.so.12git+0x5ba9eb)#15 0x00007ff40e275fed (anonymous namespace)::ExprEvaluatorBase<(anonymous namespace)::LValueExprEvaluator>::VisitCallExpr(clang::CallExpr const*) (/home/gozillon/Documents/Clang-LLVM/build-with-asserts_dump/lib/libclangAST.so.12git+0x609fed)#17 0x00007ff40e2269eb EvaluateLValue(clang::Expr const*, (anonymous namespace)::LValue&, (anonymous namespace)::EvalInfo&, bool) (/home/gozillon/Documents/Clang-LLVM/build-with-asserts_dump/lib/libclangAST.so.12git+0x5ba9eb)#19 0x00007ff40e275fed (anonymous namespace)::ExprEvaluatorBase<(anonymous namespace)::LValueExprEvaluator>::VisitCallExpr(clang::CallExpr const*) (/home/gozillon/Documents/Clang-LLVM/build-with-asserts_dump/lib/libclangAST.so.12git+0x609fed)#21 0x00007ff40e22504f clang::StmtVisitorBase<llvm::make_const_ptr, (anonymous namespace)::LValueExprEvaluator, bool>::Visit(clang::Stmt const*) (/home/gozillon/Documents/Clang-LLVM/build-with-asserts_dump/lib/libclangAST.so.12git+0x5b904f)#23 0x00007ff40e22d725 Evaluate(clang::APValue&, (anonymous namespace)::EvalInfo&, clang::Expr const*) (/home/gozillon/Documents/Clang-LLVM/build-with-asserts_dump/lib/libclangAST.so.12git+0x5c1725)#25 0x00007ff40e24c20c EvaluateStmt((anonymous namespace)::StmtResult&, (anonymous namespace)::EvalInfo&, clang::Stmt const*, clang::SwitchCase const*) (/home/gozillon/Documents/Clang-LLVM/build-with-asserts_dump/lib/libclangAST.so.12git+0x5e020c)#27 0x00007ff40e24c5e1 EvaluateStmt((anonymous namespace)::StmtResult&, (anonymous namespace)::EvalInfo&, clang::Stmt const*, clang::SwitchCase const*) (/home/gozillon/Documents/Clang-LLVM/build-with-asserts_dump/lib/libclangAST.so.12git+0x5e05e1)#29 0x00007ff40e252574 HandleFunctionCall(clang::SourceLocation, clang::FunctionDecl const*, (anonymous namespace)::LValue const*, llvm::ArrayRef<clang::Expr const*>, clang::Stmt const*, (anonymous namespace)::EvalInfo&, clang::APValue&, (anonymous namespace)::LValue const*) (/home/gozillon/Documents/Clang-LLVM/build-with-asserts_dump/lib/libclangAST.so.12git+0x5e6574)#31 0x00007ff40e27aa07 (anonymous namespace)::VoidExprEvaluator::VisitCallExpr(clang::CallExpr const*) (/home/gozillon/Documents/Clang-LLVM/build-with-asserts_dump/lib/libclangAST.so.12git+0x60ea07)#33 0x00007ff40e22e269 Evaluate(clang::APValue&, (anonymous namespace)::EvalInfo&, clang::Expr const*) (/home/gozillon/Documents/Clang-LLVM/build-with-asserts_dump/lib/libclangAST.so.12git+0x5c2269)#35 0x00007ff40e24c20c EvaluateStmt((anonymous namespace)::StmtResult&, (anonymous namespace)::EvalInfo&, clang::Stmt const*, clang::SwitchCase const*) (/home/gozillon/Documents/Clang-LLVM/build-with-asserts_dump/lib/libclangAST.so.12git+0x5e020c)#37 0x00007ff40e287c3a std::_Function_handler<void (), std::_Bind<EvaluateStmt((anonymous namespace)::StmtResult&, (anonymous namespace)::EvalInfo&, clang::Stmt const*, clang::SwitchCase const*)::'lambda'((anonymous namespace)::EvalInfo&, (anonymous namespace)::ScopeRAII<false>&, clang::ForStmt const*, (anonymous namespace)::StmtResult&, std::promise<(anonymous namespace)::EvalStmtResult>&) (std::reference_wrapper<(anonymous namespace)::EvalInfo>, std::reference_wrapper<(anonymous namespace)::ScopeRAII<false> >, clang::ForStmt const*, std::reference_wrapper<(anonymous namespace)::StmtResult>, std::reference_wrapper<std::promise<(anonymous namespace)::EvalStmtResult> >)> >::_M_invoke(std::_Any_data const&) (/home/gozillon/Documents/Clang-LLVM/build-with-asserts_dump/lib/libclangAST.so.12git+0x61bc3a)#39 0x00007ff40fabf35d std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) (/home/gozillon/Documents/Clang-LLVM/build-with-asserts_dump/lib/libLLVMSupport.so.12git+0x18f35d)#41 0x00007ff40fae1de0 std::thread::_State_impl<std::thread::_Invoker<std::tuple<llvm::ThreadPool::ThreadPool(llvm::ThreadPoolStrategy)::'lambda'()> > >::_M_run() (/home/gozillon/Documents/Clang-LLVM/build-with-asserts_dump/lib/libLLVMSupport.so.12git+0x1b1de0)#43 0x00007ff40c826609 start_thread /build/glibc-eX1tMB/glibc-2.31/nptl/pthread_create.c:478:7clang-12: error: unable to execute command: Segmentation fault (core dumped)clang version 12.0.0 (https://github.com/llvm/llvm-project.git d6eb5bb352c64ef2d7cc57181f7d0341cffaed13)Thread model: posixclang-12: note: diagnostic msg:Preprocessed source(s) and associated run script(s) are located at:clang-12: note: diagnostic msg: /tmp/cexpr_mandelbrot-1fa615.sh

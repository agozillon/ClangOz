1730,clang-12: error: unable to execute command: Segmentation fault (core dumped),clang version 12.0.0 (https://github.com/llvm/llvm-project.git d6eb5bb352c64ef2d7cc57181f7d0341cffaed13),Thread model: posix,clang-12: note: diagnostic msg:,,Preprocessed source(s) and associated run script(s) are located at:,clang-12: note: diagnostic msg: /tmp/cexpr_sycl_edge_detection-ac6a11.sh,,PLEASE submit a bug report to https://bugs.llvm.org/ and include the crash backtrace, preprocessed source, and associated run script.,#1 0x00007f0bc0b56e84 llvm::sys::RunSignalHandlers() (/home/gozillon/Documents/Clang-LLVM/build-with-asserts_dump/lib/libLLVMSupport.so.12git+0x21de84),#3 0x00007f0bc0575210 (/lib/x86_64-linux-gnu/libc.so.6+0x46210),#5 0x00007f0bbf3b34ac clang::ASTVector<unsigned long>::grow(clang::ASTContext const&, unsigned long) (/home/gozillon/Documents/Clang-LLVM/build-with-asserts_dump/lib/libclangAST.so.12git+0x73e4ac),#7 0x00007f0bbf3c0e4e clang::ASTContext::getASTRecordLayout(clang::RecordDecl const*) const (/home/gozillon/Documents/Clang-LLVM/build-with-asserts_dump/lib/libclangAST.so.12git+0x74be4e),#9 0x00007f0bbf248b76 (anonymous namespace)::LValueExprEvaluator::VisitVarDecl(clang::Expr const*, clang::VarDecl const*) (/home/gozillon/Documents/Clang-LLVM/build-with-asserts_dump/lib/libclangAST.so.12git+0x5d3b76),#11 0x00007f0bbf22f9eb EvaluateLValue(clang::Expr const*, (anonymous namespace)::LValue&, (anonymous namespace)::EvalInfo&, bool) (/home/gozillon/Documents/Clang-LLVM/build-with-asserts_dump/lib/libclangAST.so.12git+0x5ba9eb),#13 0x00007f0bbf283a07 (anonymous namespace)::VoidExprEvaluator::VisitCallExpr(clang::CallExpr const*) (/home/gozillon/Documents/Clang-LLVM/build-with-asserts_dump/lib/libclangAST.so.12git+0x60ea07),#15 0x00007f0bbf237269 Evaluate(clang::APValue&, (anonymous namespace)::EvalInfo&, clang::Expr const*) (/home/gozillon/Documents/Clang-LLVM/build-with-asserts_dump/lib/libclangAST.so.12git+0x5c2269),#17 0x00007f0bbf25520c EvaluateStmt((anonymous namespace)::StmtResult&, (anonymous namespace)::EvalInfo&, clang::Stmt const*, clang::SwitchCase const*) (/home/gozillon/Documents/Clang-LLVM/build-with-asserts_dump/lib/libclangAST.so.12git+0x5e020c),#19 0x00007f0bbf25b574 HandleFunctionCall(clang::SourceLocation, clang::FunctionDecl const*, (anonymous namespace)::LValue const*, llvm::ArrayRef<clang::Expr const*>, clang::Stmt const*, (anonymous namespace)::EvalInfo&, clang::APValue&, (anonymous namespace)::LValue const*) (/home/gozillon/Documents/Clang-LLVM/build-with-asserts_dump/lib/libclangAST.so.12git+0x5e6574),#21 0x00007f0bbf283a07 (anonymous namespace)::VoidExprEvaluator::VisitCallExpr(clang::CallExpr const*) (/home/gozillon/Documents/Clang-LLVM/build-with-asserts_dump/lib/libclangAST.so.12git+0x60ea07),#23 0x00007f0bbf237269 Evaluate(clang::APValue&, (anonymous namespace)::EvalInfo&, clang::Expr const*) (/home/gozillon/Documents/Clang-LLVM/build-with-asserts_dump/lib/libclangAST.so.12git+0x5c2269),#25 0x00007f0bbf25520c EvaluateStmt((anonymous namespace)::StmtResult&, (anonymous namespace)::EvalInfo&, clang::Stmt const*, clang::SwitchCase const*) (/home/gozillon/Documents/Clang-LLVM/build-with-asserts_dump/lib/libclangAST.so.12git+0x5e020c),#27 0x00007f0bbf290c3a std::_Function_handler<void (), std::_Bind<EvaluateStmt((anonymous namespace)::StmtResult&, (anonymous namespace)::EvalInfo&, clang::Stmt const*, clang::SwitchCase const*)::'lambda'((anonymous namespace)::EvalInfo&, (anonymous namespace)::ScopeRAII<false>&, clang::ForStmt const*, (anonymous namespace)::StmtResult&, std::promise<(anonymous namespace)::EvalStmtResult>&) (std::reference_wrapper<(anonymous namespace)::EvalInfo>, std::reference_wrapper<(anonymous namespace)::ScopeRAII<false> >, clang::ForStmt const*, std::reference_wrapper<(anonymous namespace)::StmtResult>, std::reference_wrapper<std::promise<(anonymous namespace)::EvalStmtResult> >)> >::_M_invoke(std::_Any_data const&) (/home/gozillon/Documents/Clang-LLVM/build-with-asserts_dump/lib/libclangAST.so.12git+0x61bc3a),#29 0x00007f0bc0ac835d std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) (/home/gozillon/Documents/Clang-LLVM/build-with-asserts_dump/lib/libLLVMSupport.so.12git+0x18f35d),#31 0x00007f0bc0aeade0 std::thread::_State_impl<std::thread::_Invoker<std::tuple<llvm::ThreadPool::ThreadPool(llvm::ThreadPoolStrategy)::'lambda'()> > >::_M_run() (/home/gozillon/Documents/Clang-LLVM/build-with-asserts_dump/lib/libLLVMSupport.so.12git+0x1b1de0),#33 0x00007f0bbd82f609 start_thread /build/glibc-eX1tMB/glibc-2.31/nptl/pthread_create.c:478:7,clang-12: error: unable to execute command: Segmentation fault (core dumped),clang version 12.0.0 (https://github.com/llvm/llvm-project.git d6eb5bb352c64ef2d7cc57181f7d0341cffaed13),Thread model: posix,clang-12: note: diagnostic msg:,,Preprocessed source(s) and associated run script(s) are located at:,clang-12: note: diagnostic msg: /tmp/cexpr_sycl_edge_detection-6634a3.sh,,double free or corruption (out)clang-12: error: clang frontend command failed due to signal (use -v to see invocation)Target: x86_64-unknown-linux-gnuInstalledDir: /home/gozillon/Documents/Clang-LLVM/build-with-asserts_dump//bin********************PLEASE ATTACH THE FOLLOWING FILES TO THE BUG REPORT:clang-12: note: diagnostic msg: /tmp/cexpr_sycl_edge_detection-780605.cppclang-12: note: diagnostic msg:********************
